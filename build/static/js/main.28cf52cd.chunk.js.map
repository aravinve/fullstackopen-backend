{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/PersonsService.js","index.js"],"names":["Filter","handleSearchInput","type","placeholder","onChange","Notification","message","notificationStyle","className","PersonForm","handleContactNameChange","contactName","contactNumber","handleContactNumberChange","submitFormHandler","onSubmit","value","required","Person","person","removeContactHandler","name","number","onClick","Persons","persons","filteredPersons","loadingStatus","targetPersonArray","length","map","baseUrl","personsService","getAll","axios","get","then","res","data","create","post","update","id","put","remove","delete","App","useState","setPersons","setFilteredPersons","newName","setNewName","newNumber","setNewNumber","loading","setLoading","notification","setNotification","useEffect","personService","result","resetNotification","catch","e","setTimeout","searchName","target","toLowerCase","filter","includes","preventDefault","targetPerson","find","undefined","window","confirm","updatedPerson","validateEntry","newData","concat","personObj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28cf52cd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Filter({handleSearchInput}) {\r\n    return (\r\n        <>\r\n            <h2>Filter Contacts</h2>\r\n            <div>\r\n                <input type=\"text\" placeholder=\"Search ...\" onChange={handleSearchInput} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nfunction Notification({message, type}) {\r\n    const notificationStyle = `${type} notify-bar`\r\n    return (\r\n        <div className={notificationStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nfunction PersonForm({handleContactNameChange, contactName, contactNumber, handleContactNumberChange, submitFormHandler}) {\r\n    return (\r\n        <div>\r\n            <h2>Contact Add Form</h2>\r\n            <form onSubmit={submitFormHandler}>\r\n                <input type=\"text\" value={contactName} onChange={handleContactNameChange} \r\n                placeholder=\"Contact Name\" required />\r\n                <input type=\"number\" value={contactNumber} onChange={handleContactNumberChange} \r\n                placeholder=\"Contact Number\" required />\r\n                <button type=\"submit\">Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nfunction Person({person, removeContactHandler}) {\r\n  return (\r\n            <tr>\r\n                <td>{person.name}</td>\r\n                <td>{person.number}</td>\r\n                <td>\r\n                  <button onClick={() => removeContactHandler(person)}>Remove</button>\r\n                </td>\r\n            </tr>\r\n  )\r\n   \r\n}\r\n\r\nexport default Person\r\n","import React from 'react'\r\nimport Person from './Person'\r\n\r\nfunction Persons({persons, filteredPersons, loadingStatus, removeContactHandler}) {\r\n    const targetPersonArray = filteredPersons.length > 0 ? filteredPersons : persons\r\n    return (\r\n        <>\r\n            <h2>Contacts</h2>\r\n            {!loadingStatus ? (<table>\r\n                <tbody>\r\n                    {\r\n                        targetPersonArray.map(person => (\r\n                            <Person key={person.name} person={person} removeContactHandler={removeContactHandler} />\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>) : (<>\r\n            <div>\r\n                <h4>Loading ....</h4>\r\n            </div>\r\n            </>)}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons\r\n","import axios from 'axios'\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst create = (data) => {\r\n    const request = axios.post(baseUrl, data)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst update = (id, data) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, data)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst personsService = {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove}\r\n\r\nexport default personsService","import React, {useState, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Filter from './components/Filter';\r\nimport Notification from './components/Notification';\r\nimport PersonForm from './components/PersonForm';\r\nimport Persons from './components/Persons';\r\nimport './index.css';\r\nimport personService from './services/PersonsService'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [filteredPersons, setFilteredPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [notification, setNotification] = useState({\r\n    message: null,\r\n    type: null\r\n  })\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    personService.getAll().then(result => {\r\n      setPersons(result)\r\n      setLoading(false)\r\n      setNotification({\r\n        message: 'Loaded Contacts Successfully',\r\n        type: 'success'\r\n      })\r\n      resetNotification()\r\n    }).catch(e => {\r\n      setPersons([])\r\n      setLoading(false)\r\n      setNotification({\r\n        message: `Error: ${e.message}`,\r\n        type: 'danger'\r\n      })\r\n      resetNotification()\r\n    })\r\n  }, [])\r\n\r\n  const resetNotification = () => {\r\n    setTimeout(() => {\r\n      setNotification({\r\n        message: null,\r\n        type: null\r\n      })\r\n    }, 5000)\r\n  }\r\n\r\n  const handleContactNameChange = (e) => {\r\n    setNewName(e.target.value)\r\n  }\r\n\r\n  const handleContactNumberChange = (e) => {\r\n    setNewNumber(e.target.value)\r\n  }\r\n\r\n  const validateEntry = (name, number) => {\r\n    const targetPerson = persons.find(person => person.name.toLowerCase() === name.toLowerCase())\r\n    if(targetPerson !== undefined){\r\n      if(targetPerson.number !== number){\r\n        const updateNumberConfirmation = window.confirm(`Do you want to update ${targetPerson.name}'s number from ${targetPerson.number} to ${number}`)\r\n        if(updateNumberConfirmation){\r\n          const updatedPerson = {...targetPerson, number: number}\r\n          personService.update(targetPerson.id, updatedPerson).then(result => {\r\n            setPersons(persons.map(person => person.id !== result.id ? person : result))\r\n            setNotification({\r\n              message: `Updated ${result.name} Contact Successfully`,\r\n              type: 'success'\r\n            })\r\n            resetNotification()\r\n            setNewName('')\r\n            setNewNumber('')\r\n          }).catch(e => {\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setNotification({\r\n              message: `Error: ${e.message}`,\r\n              type: 'danger'\r\n            })\r\n            resetNotification()\r\n          })\r\n        }\r\n      } else {\r\n        setNotification({\r\n          message: `${name} already present in the phonebook with number: ${number}`,\r\n          type: 'danger'\r\n        })\r\n        resetNotification()\r\n      }\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const submitFormHandler = (e) => {\r\n    e.preventDefault()\r\n    if(validateEntry(newName, newNumber)){\r\n      const newData = {name: newName, number: newNumber}\r\n      personService.create(newData).then(result => {\r\n        setPersons(persons.concat(result))\r\n        setNotification({\r\n          message: `Created ${result.name} Contact Successfully`,\r\n          type: 'success'\r\n        })\r\n        resetNotification()\r\n        setNewName('')\r\n        setNewNumber('')\r\n      }).catch(e => {\r\n        setNewName('')\r\n        setNewNumber('')\r\n        setNotification({\r\n          message: `Error: ${e.message}`,\r\n          type: 'danger'\r\n        })\r\n        resetNotification()\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSearchInput = (e) => {\r\n    const searchName = e.target.value.toLowerCase()\r\n    if(searchName !== ''){\r\n      setFilteredPersons(persons.filter(person => person.name.toLowerCase().includes(searchName)))\r\n    } else {\r\n      setFilteredPersons([])\r\n    }\r\n  }\r\n\r\n  const removeContactHandler = (personObj) => {\r\n    const confirmation = window.confirm(`Do you want to delete ${personObj.name}`)\r\n    if(confirmation){\r\n      personService.remove(personObj.id).then(result => {\r\n        setPersons(persons.filter(person => person.id !== personObj.id))\r\n        setNotification({\r\n          message: `Deleted ${personObj.name} Contact Successfully`,\r\n          type: 'success'\r\n        })\r\n        resetNotification()\r\n      }).catch(e => {\r\n        setNotification({\r\n          message: `Error: ${e.message}`,\r\n          type: 'danger'\r\n        })\r\n        resetNotification()\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n   <>\r\n    <h1>Phone Book App</h1>\r\n    {notification.message && <Notification message={notification.message} type={notification.type} />}\r\n    <Filter handleSearchInput={handleSearchInput} />\r\n    <PersonForm submitFormHandler={submitFormHandler} contactName={newName} handleContactNameChange={handleContactNameChange} handleContactNumberChange={handleContactNumberChange} contactNumber={newNumber} />\r\n    <Persons persons={persons} filteredPersons={filteredPersons} loadingStatus={loading} removeContactHandler={removeContactHandler} />\r\n   </>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}